<?php


/**
 * Implementation of hook_menu
 */
function pond_relations_menu(){
  $items = array();
  
  $items['admin/config/pond/relation-cleanup'] = array(
    'title' => 'Cleanup Relations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pond_relations_cleanup_form'),
    'description' => 'Fix any corrupted relations between entities.',
    'access arguments' => array('cleanup relations'),
  );

  return $items;
}

/**
 * Implement hook_permission
 */
function pond_relations_permission() {
  return array(
    'cleanup relations' => array(
      'title' => t('Cleanup Relations'),
    ),
  );
}

function pond_relations_cleanup_form() {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go',
  );
  /*
  $relation = relation_load(2662);
  dpm($relation);
  $types = relation_get_types(array($relation->relation_type));
  if(empty($types)){}
  foreach($relation->endpoints['und'] as $endpoint){
    $endpoint_entity = entity_load($endpoint['entity_type'], array($endpoint['entity_id']));
    dpm($endpoint_entity);
    if(empty($endpoint_entity)){
      $corrupt = TRUE;
    }
  }*/
  return $form;
}

function pond_relations_cleanup_form_submit() {
  $_SESSION['http_request_count'] = 0; // reset counter for debug information.
  $batch = pond_relations_cleanup_batch();
  batch_set($batch);
}

function pond_relations_cleanup_batch() {
  $query = new EntityFieldQuery();
    $query
      ->entityCondition('entity_type', 'relation', '=');
    $result = $query->execute();
    $rids = array_keys($result['relation']);

  $operations = array();
  foreach($rids as $rid){
    $operations[] = array('pond_relations_cleanup_batch_operation', array($rid));
  }
  $batch = array(
    'operations' => $operations,
    'finished' => 'pond_relations_cleanup_batch_finished',
  );
  return $batch;
}

function pond_relations_cleanup_batch_operation($rid, &$context) {
  if (empty($context['results'])) {
    $context['results']['num_corrupt'] = 0;
    $context['results']['num_valid'] = 0;
  }
  $context['results']['current_rid'] = $rid;
  $corrupt = FALSE;
  
  $relation = relation_load($rid);

  $types = relation_get_types(array($relation->relation_type));
  if(empty($types)){
    $corrupt = TRUE;
  } else {
    foreach($relation->endpoints['und'] as $endpoint){
      $endpoint_entity = entity_load($endpoint['entity_type'], array($endpoint['entity_id']));
      if(empty($endpoint_entity)){
        $corrupt = TRUE;
      }
    }
  }

  if($corrupt){
    relation_delete($relation->rid);//HOT!
    $context['results']['num_corrupt']++;
    $context['results']['corrupt_relations'][$rid] = $relation->relation_type;
  } else {
    $context['results']['num_valid']++;
  }

  // Optional message displayed under the progressbar.
  $context['message'] = t('Number of corrupt relations cleaned: @corrupt. Number of valid relations skipped: @valid.', array('@corrupt' => $context['results']['num_corrupt'], '@valid' => $context['results']['num_valid']));

  $_SESSION['http_request_count']++;
}

function pond_relations_cleanup_batch_finished($success, $results, $operations) {
  if ($success) {
    dpm($results);
    //rupal_set_message('Number of corrupt relations cleaned: @corrupt. Number of valid relations skipped: @valid.', array('@corrupt' => $results['num_corrupt'], '@valid' => $results['num_valid']));
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    dpm($results);
    $error_operation = reset($operations);
    drupal_set_message(t('An error occurred while processing @operation with arguments : @args', array('@operation' => $error_operation[0], '@args' => print_r($error_operation[0], TRUE))));
  }
}